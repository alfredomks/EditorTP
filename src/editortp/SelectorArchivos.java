/*
 * SelectorArchivos.java
 *
 * Created on 24 de noviembre de 2008, 03:28 PM
 */
package editortp;

import EditorComponentes.MarcadorDePalabras;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.DefaultStyledDocument;

/**
 *
 * @author  hh
 */
public class SelectorArchivos extends javax.swing.JFrame {

    /** Creates new form SelectorArchivos */
    private EditorTPView editor;
    //private UndoManager undo = new UndoManager();

    public SelectorArchivos(EditorTPView editor) {
        this.editor = editor;
        initComponents();
        jFileChooser1.setMultiSelectionEnabled(true);
        jFileChooser1.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {

                boolean aceptado = false;
                String extencion = f.getName();
                int index = extencion.lastIndexOf('.');
                if (f.isFile() && index > -1) {
                    extencion = extencion.substring(index, extencion.length());
                    if (extencion.equalsIgnoreCase(".txt")) {
                        aceptado = true;
                    }
                } else {
                    aceptado = true;
                }
                return aceptado;
            }

            @Override
            public String getDescription() {
                return "Archivo txt";
            }
        });
        // jFileChooser1.setFile("*.flex");
        jFileChooser1.setCurrentDirectory(new File("src/Archivos"));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("BUSCAR");

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jFileChooser1.setMultiSelectionEnabled(true);
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        jPanel1.add(jFileChooser1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-584)/2, (screenSize.height-412)/2, 584, 412);
    }// </editor-fold>//GEN-END:initComponents
    String f;

private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed

    if (evt.getActionCommand().equals("CancelSelection")) {
        dispose();
    } else {
        File[] archivos = jFileChooser1.getSelectedFiles();
        for (int i = 0; i < archivos.length; i++) {
            File file = archivos[i];
            crearAreaDetexto(file);
        }

    }


}//GEN-LAST:event_jFileChooser1ActionPerformed
    public void crearAreaDetexto(File archivo) {
        final JTextPane jt;
        String ruta;
        final JPanel reglaVertical;

        String nombreFile = archivo.getName();
        int ext = nombreFile.length();
        String aux = "";

        for (int i = 1; ext > i; i++) {
            if (nombreFile.charAt(i) == '.') {
                aux = nombreFile.substring(i);
            }

        }

        if (true) {//compara la extencion de los archivos
            ruta = "" + archivo.getPath();//se obtiene la ruta del archivo
            JPanel jp = new JPanel();
            jp.setName(ruta);
            final DefaultStyledDocument documento = new DefaultStyledDocument();
            jt = new JTextPane(documento);            
            jt.setMinimumSize(new Dimension(300, 200));
            jt.setBackground(Color.white);
            
            JScrollPane sp = new JScrollPane();
            editor.getJTabbedPane1().addTab("" + nombreFile, new ImageIcon(getClass().getResource("/editortp/resources/busyicons/glipper.png")), jp);//se ubica el nombre de la pesta√±a
            editor.getJTabbedPane1().setSelectedComponent(jp);
            jp.setLayout(new java.awt.CardLayout());
            jp.add(sp, java.awt.BorderLayout.CENTER);
            sp.setViewportView(jt);
            try {
                guardaArchivo(ruta);
                f = leeArchivo("" + ruta);//metodo para obtener el archivo
                jt.setText(f);//fija el texto del archivo en el TextPane

            } catch (FileNotFoundException ex) {
                Logger.getLogger(SelectorArchivos.class.getName()).log(Level.SEVERE, null, ex);
            }
            //Crear la regla vertical--------------------
            reglaVertical = new JPanel();
            reglaVertical.setBackground(Color.GREEN);
            reglaVertical.setLayout(new BoxLayout(reglaVertical, BoxLayout.Y_AXIS));
            sp.setRowHeaderView(reglaVertical);
            //*---------------------------------------------------
            documento.addUndoableEditListener(editor.getEscuchaUndo());
            MarcadorDePalabras.marcarElTexto(jt,editor.getEscuchaUndo());
            ///*---------------------------------------------------

            jt.addKeyListener(new KeyAdapter() {
                public void keyReleased(KeyEvent e) {                
                    //**--------------------------------------------------------------
                    if (e.getKeyChar() == KeyEvent.VK_ENTER || e.getKeyChar() == 8) {
                        reglaVertical.removeAll();
                        for (int i = 1; i <= jt.getHeight()/jt.getFont().getSize(); i++) {// areaTexto.getHeight()
                            JLabel et = new JLabel("" + i);
                            et.setFont(jt.getFont());
                            reglaVertical.add(et);
                        }
                    }
                    reglaVertical.revalidate();
                }
                @Override
                public void keyTyped(KeyEvent e) {
                    MarcadorDePalabras.marcarElTexto(jt,editor.getEscuchaUndo());//documento,
                }

            });
            //setNumeracionFila(reglaVertical, jt);
            //-----------------------------------------------

            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "SOLO PUEDE ABRIR ARCHIVOS .txt");
        }
    }

    public int getNumeroSaltosDeLinea(JTextPane areaTexto) {
        //System.out.println("Ancho :"+areaTexto.getHeight());
        String x = areaTexto.getText();
        int c = 0;
        for (int i = 0; i < x.length(); i++) {
            char b = '\n';
            if (b == x.charAt(i)) {
                c++;
            }
        }
        return c;
    }

    public static String leeArchivo(String r) throws FileNotFoundException {
        FileInputStream file = null;
        String archivo = "";


        file = new FileInputStream(r);
        DataInputStream da = new DataInputStream(file);
        try {

            while (true) {
                Object a = da.readLine();//lee siguiente linea

                if (a == null) {
                    break;
                } else {
                    archivo = archivo.concat(a + "\n");//concatena las lineas de codigo

                }


            }

        } catch (IOException ex) {
            Logger.getLogger(SelectorArchivos.class.getName()).log(Level.SEVERE, null, ex);
        }

        return archivo;

    }
    public static Vector vr = new Vector();

    public static Vector guardaArchivo(String r) {

        if (vr.size() == 0) {

            vr.add(0, r);
        //System.out.print(vr.lastIndexOf(ruta));
        } else {


            vr.insertElementAt(r, vr.size());

        }

        return vr;
    }

    public static String buscaRuta(int i) {
        String g = (String) vr.elementAt(i);

        return g;


    }

    public static void quitarRuta(int i) {

        try {
            vr.removeElementAt(i);
        } catch (Exception e) {
        }




    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
